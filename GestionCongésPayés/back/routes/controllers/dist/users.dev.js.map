{"version":3,"sources":["users.js"],"names":["require","config","Users","Holidays","Demandes","Types","Statuses","express","jwt","app","refreshTokens","exports","createUser","req","res","user","body","create","then","createdUser","json","idUser","id","role","startingDate","firstWorkingDay","dateWorked6months","Date","setMonth","getMonth","totalConge","calculateCongesPayes","holiday","send","getAll","findAll","include","users","getUserById","params","findByPk","model","userLogin","userName","password","findOne","where","userjwt","name","accessToken","generateAccessToken","refreshToken","sign","process","env","REFRESH_TOKEN_SECRET","accesstoken","refreshtoken","userToken","token","sendStatus","includes","verify","err","ACCESS_TOKEN_SECRET","expiresIn","userLogOut","filter","deleteUserById","UserId","demandes","destroy","forEach","el","updateUser","objUser","update","returning","updatedUser","holidayUpdate","updateHoliday","newUser","updateUserHoliday","fullMonths","getFullYear","today","num","getDate","daysPast","i","setDate","day","getDay","year","month","days","daysWorked","parseFloat","toFixed","error","totalPaidLeaves","holidaysTaken","holidaysAvailable"],"mappings":"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","sourcesContent":["require('../../config/db');\nrequire('dotenv').config();\nconst { Users } = require(\"../../models\");\nconst { Holidays } = require(\"../../models\");\nconst { Demandes } = require(\"../../models\");\nconst { Types } = require(\"../../models\");\nconst { Statuses } = require(\"../../models\");\n\nconst express = require('express');\nconst jwt = require('jsonwebtoken');\nconst app = express();\n\nlet refreshTokens = [];\n\n\n\n// to create users\nexports.createUser = async (req, res) => {\n    try{\n        const user = req.body;\n        await Users.create(user).then(createdUser=>{\n            res.json(createdUser); // return created user\n            const idUser = createdUser.id;\n            const role = createdUser.role;\n            const startingDate = createdUser.firstWorkingDay;\n            if(role==2||role==3){ // si user n'est pas admin, create holiday\n            // to get the date of 6 months after first working date\n                const dateWorked6months = new Date(new Date(startingDate).setMonth(new Date(startingDate).getMonth()+6));\n                let totalConge;\n                if( new Date() >= dateWorked6months){ // if this employee has been working for more than 6 months\n                    // to calculate days of congés payés\n                    totalConge = calculateCongesPayes(startingDate);    \n                } else { // if this employee has not been working for more than 6 months\n                    totalConge = 0;  // no congés payés normale available\n                }            \n                const holiday = {\n                    \"UserId\": [idUser],\n                    \"holidaysAvailable\": totalConge,\n                    \"holidaysTaken\": 0\n                    };\n                Holidays.create(holiday); //to create this employee's paid leaves\n            }    \n        });    \n    } catch (error) {\n        res.send(error);\n        }\n};\n\n// to get all the users\nexports.getAll = async (req, res) => {\n    try{\n        const users = await Users.findAll({ \n            include: [ Demandes, Holidays ]\n        });\n        res.json(users); // to return the list of users\n    }catch (error) {\n        res.send(error);\n    }\n};\n\n// to get user by id\nexports.getUserById = async (req, res) => {\n    try {\n        const id = req.params.id;\n        const user = await Users.findByPk(id, { \n            include: [ {\n                model: Demandes,\n                include: [ Types, Statuses ]\n            },\n            \n                Holidays ]\n        });\n        res.json(user);  \n    }catch (error) {\n        res.send(error);\n    }    \n};\n\n// to get user by userName to login\nexports.userLogin = async (req, res) => {\n    try{\n        const userName = req.body.userName;\n        const password = req.body.password;\n        const user = await Users.findOne({\n            where: {userName: [userName], password: [password]},\n            include: [{ model: Demandes, include: [Types, Statuses] }, Holidays ]\n        });\n        if (user) {\n            const userjwt = { name: userName, role: user.role };\n            const accessToken = generateAccessToken(userjwt);\n            const refreshToken = jwt.sign(userjwt, process.env.REFRESH_TOKEN_SECRET);\n            res.json({user: user, accesstoken: accessToken, refreshtoken: refreshToken});\n        } else {\n            res.json(null);\n        }\n    }catch (error) {\n        res.send(error);\n    }\n};\n\nexports.userToken = async (req, res) => {\n    try{\n        const refreshToken = req.body.token;\n        if (refreshToken == null) return res.sendStatus(401);\n        if (!refreshTokens.includes(refreshToken)) return res.sendStatus(403);\n        jwt.verify(refreshToken, process.env.REFRESH_TOKEN_SECRET, (err, user) => {\n            if (err) return res.sendStatus(403);\n        //    const accessToken = generateAccessToken(name: user.userName)\n        });\n    }catch (error) {\n        res.send(error);\n    }\n};\n\nfunction generateAccessToken(user) {\n    return jwt.sign(user, process.env.ACCESS_TOKEN_SECRET, { expiresIn: '15m' });\n}\n\nexports.userLogOut = async (req, res) => {\n    refreshTokens = refreshTokens.filter(token => token !== req.body.token);\n    res.sendStatus(204);\n};\n\n\n// to delete user by id\nexports.deleteUserById = async (req, res) => {\n    try {\n        const id = req.params.id;\n        const holiday = await Holidays.findOne({\n            where: {UserId: [id]}\n        });\n        const demandes = await Demandes.findAll({\n            where: {UserId: [id]}\n        });\n        // if this user has holidays, delete his holidays\n        if(holiday){ \n            await Holidays.destroy({where: {UserId: [id]}});\n        }\n        // if this user has demandes, delete them\n        if(demandes){\n            demandes.forEach(el => {\n                Demandes.destroy({where: {UserId: [id]}});\n            });\n        }\n        // delete this user\n        await Users.destroy({where: {id: [id]}}); \n        res.json(\"user and user's holidays are deleted\");     \n    }catch (error) {\n        res.send(error);\n    }\n\n};\n\n// to update user\nexports.updateUser = async (req, res) => {\n    try {\n        const id = req.body.id;\n        const user = await Users.findByPk(id);  \n        if(user){ // si user exists\n            let objUser = req.body;\n            delete objUser.id;     \n            await Users.update(objUser,{    // update user\n                where: { \n                    id : [id]\n                },\n                returning: true\n            }).then(async ()=>{\n                // get and return this user after being updated\n                const updatedUser = await Users.findByPk(id);          \n                const holiday = await Holidays.findByPk(id);\n                const holidayUpdate = updateHoliday(updatedUser, holiday);\n                if(holidayUpdate){\n                    Holidays.update(holidayUpdate,{    // update user\n                        where: { \n                            UserId : [id]\n                        }\n                    });  \n                }\n                const newUser = await Users.findByPk(id, {\n                    include: [ Holidays]\n                });\n                res.json(newUser);\n            });\n        } else {\n            res.json(\"user doesn't exist\");\n        }\n    }catch (error) {\n        res.send(error);\n    }\n};\n\nexports.updateUserHoliday = async (req, res) => {\n    try {\n        const id = req.params.idUser;   \n        // get and return this user after being updated\n        const updatedUser = await Users.findByPk(id);\n            // return updated user    \n        const holiday = await Holidays.findOne({\n            where: { UserId: [id]}\n        });\n        const holidayUpdate = updateHoliday(updatedUser, holiday);\n        if(holidayUpdate){\n            Holidays.update(holidayUpdate,{    // update user\n                where: { \n                    UserId : [id]\n                }\n            });  \n        }\n        res.json(holidayUpdate) ;\n    }catch (error) {\n        res.send(error);\n    }\n};\n\n\nfunction calculateCongesPayes(startingDate){\n    try {\n        const fullMonths = new Date().getMonth() -startingDate.getMonth()-1 +12 * (new Date().getFullYear() - startingDate.getFullYear());\n        // to calculate worked days of current month\n        const today = new Date();\n        const num = today.getDate();\n        let daysPast = 0;\n        for(let i=1; i<=num; i++){     \n            today.setDate(i);\n            let day = today.getDay();\n            if(!(day==0 || day == 6)){\n                daysPast += 1;\n            }               \n        }\n    // to calculate worked days of first working months\n        const firstWorkingDay = startingDate.getDate();\n        const year = startingDate.getFullYear();\n        const month = startingDate.getMonth()+1;\n        const days = new Date(year, month, 0).getDate();\n        let daysWorked = 0;\n        for(let i=firstWorkingDay; i<=days; i++){     \n            startingDate.setDate(i);\n            let day = startingDate.getDay();\n            if(!(day==0 || day == 6)){\n                daysWorked += 1;\n            }               \n        }   \n        const totalConge = parseFloat(fullMonths*2.5 + 2.5/21*(daysPast+daysWorked)).toFixed(1); \n        return totalConge;\n    } catch (error) {\n        res.send(error);\n    }           \n}\n\nfunction updateHoliday(user, holiday){\n    try {\n        const role = user.role;\n        if(role==2 || role==3){ // try to update user's holiday if user is employee or manager\n            const startingDate = user.firstWorkingDay;\n            const dateWorked6months = new Date(new Date(startingDate).setMonth(new Date(startingDate).getMonth()+6));\n                // recalculate paid leaves\n            if( new Date() >= dateWorked6months){ //update user's holiday if user has been working for more than 6 months \n                const totalPaidLeaves = calculateCongesPayes(startingDate);\n                const holidaysTaken = holiday.holidaysTaken;\n                const holidaysAvailable = totalPaidLeaves - holidaysTaken;\n                const holidayUpdate = {\n                    \"holidaysAvailable\": holidaysAvailable, \n                    \"holidaysTaken\": holidaysTaken\n                    };\n                return holidayUpdate;\n            }\n        }    \n    } catch (error) {\n        res.send(error);\n    }   \n}"],"file":"users.dev.js"}